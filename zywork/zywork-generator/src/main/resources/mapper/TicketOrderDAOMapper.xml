<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.TicketOrderDAO">

    <insert id="save" parameterType="ticketOrderDO">
        insert into t_ticket_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ticketItemId != null">
				ticket_item_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="openid != null">
				openid,
			</if>
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="orderTime != null">
				order_time,
			</if>
			<if test="unitPrice != null">
				unit_price,
			</if>
			<if test="totalSeat != null">
				total_seat,
			</if>
			<if test="totalPrice != null">
				total_price,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ticketItemId != null">
				#{ticketItemId},
			</if>
			<if test="userId != null">
				#{userId},
			</if>
			<if test="openid != null">
				#{openid},
			</if>
			<if test="orderNo != null">
				#{orderNo},
			</if>
			<if test="orderTime != null">
				#{orderTime},
			</if>
			<if test="unitPrice != null">
				#{unitPrice},
			</if>
			<if test="totalSeat != null">
				#{totalSeat},
			</if>
			<if test="totalPrice != null">
				#{totalPrice},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			
        </trim>
    </insert>

    <delete id="remove" parameterType="ticketOrderDO">
        delete from t_ticket_order where id = #{id}
    </delete>

    <delete id="removeById" parameterType="long">
        delete from t_ticket_order where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_ticket_order where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="ticketOrderDO">
        update t_ticket_order
        <set>
            <if test="ticketItemId != null">
				ticket_item_id = #{ticketItemId},
			</if>
			<if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="openid != null">
				openid = #{openid},
			</if>
			<if test="orderNo != null">
				order_no = #{orderNo},
			</if>
			<if test="orderTime != null">
				order_time = #{orderTime},
			</if>
			<if test="unitPrice != null">
				unit_price = #{unitPrice},
			</if>
			<if test="totalSeat != null">
				total_seat = #{totalSeat},
			</if>
			<if test="totalPrice != null">
				total_price = #{totalPrice},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			
        </set>
        where id = #{id}
    </update>

    <update id="updateActiveStatus" parameterType="top.zywork.query.StatusQuery">
        update t_ticket_order set is_active = #{status} where id = #{id}
    </update>

    <update id="updateActiveStatuses" parameterType="top.zywork.query.StatusQueries">
        update t_ticket_order set is_active = #{status} where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <sql id="select_columns">
        id as id, ticket_item_id as ticketItemId, user_id as userId, openid as openid, order_no as orderNo, order_time as orderTime, unit_price as unitPrice, total_seat as totalSeat, total_price as totalPrice, create_time as createTime, update_time as updateTime
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.id != null">
			id = #{query.id}
		</if>
		<if test="query != null and query.ticketItemId != null">
			and ticket_item_id = #{query.ticketItemId}
		</if>
		<if test="query != null and query.userId != null">
			and user_id = #{query.userId}
		</if>
		<if test="query != null and query.openid != null and query.openid != ''">
			and openid like concat('%', #{query.openid}, '%')
		</if>
		<if test="query != null and query.orderNo != null and query.orderNo != ''">
			and order_no like concat('%', #{query.orderNo}, '%')
		</if>
		<if test="query != null and query.orderTimeStart != null and query.orderTimeEnd == null">
			and order_time <![CDATA[ >= ]]> #{query.orderTimeStart}
		</if>
		<if test="query != null and query.orderTimeStart == null and query.orderTimeEnd != null">
			and order_time <![CDATA[ <= ]]> #{query.orderTimeEnd}
		</if>
		<if test="query != null and query.orderTimeStart != null and query.orderTimeEnd != null">
			and order_time <![CDATA[ >= ]]> #{query.orderTimeStart} and order_time <![CDATA[ <= ]]> #{query.orderTimeEnd}
		</if>
		<if test="query != null and query.unitPrice != null">
			and unit_price = #{query.unitPrice}
		</if>
		<if test="query != null and query.totalSeat != null">
			and total_seat = #{query.totalSeat}
		</if>
		<if test="query != null and query.totalPrice != null">
			and total_price = #{query.totalPrice}
		</if>
		<if test="query != null and query.createTimeStart != null and query.createTimeEnd == null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeStart}
		</if>
		<if test="query != null and query.createTimeStart == null and query.createTimeEnd != null">
			and create_time <![CDATA[ <= ]]> #{query.createTimeEnd}
		</if>
		<if test="query != null and query.createTimeStart != null and query.createTimeEnd != null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeStart} and create_time <![CDATA[ <= ]]> #{query.createTimeEnd}
		</if>
		<if test="query != null and query.updateTimeStart != null and query.updateTimeEnd == null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeStart}
		</if>
		<if test="query != null and query.updateTimeStart == null and query.updateTimeEnd != null">
			and update_time <![CDATA[ <= ]]> #{query.updateTimeEnd}
		</if>
		<if test="query != null and query.updateTimeStart != null and query.updateTimeEnd != null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeStart} and update_time <![CDATA[ <= ]]> #{query.updateTimeEnd}
		</if>
		
    </sql>

    <select id="getById" parameterType="long" resultType="ticketOrderDO">
        select
        <include refid="select_columns"/>
        from t_ticket_order where id = #{id}
    </select>

    <select id="listAll" resultType="ticketOrderDO">
        select
        <include refid="select_columns"/>
        from t_ticket_order
        order by update_time desc, create_time desc
    </select>

    <select id="listPage" parameterType="top.zywork.query.PageQuery" resultType="ticketOrderDO">
        select
        <include refid="select_columns"/>
        from t_ticket_order
        order by
        <if test="sort != null and sort != ''">
            ${sort} ${order}
        </if>
        <if test="sort == null or sort == ''">
            update_time desc, create_time desc
        </if>
        limit #{beginIndex}, #{pageSize}
    </select>

    <select id="count" resultType="long">
        select count(*) from t_ticket_order
    </select>

    <select id="listPageByCondition" resultType="ticketOrderDO">
        select
        <include refid="select_columns"/>
        from t_ticket_order
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="pager.sort != null and pager.sort != ''">
            ${pager.sort} ${pager.order}
        </if>
        <if test="pager.sort == null or pager.sort == ''">
            update_time desc, create_time desc
        </if>
        limit #{pager.beginIndex}, #{pager.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_ticket_order
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

	<update id="updateOrderTimeByOrderNo" parameterType="string">
		update t_ticket_order set order_time = CURRENT_TIMESTAMP where order_no = #{orderNo}
	</update>

</mapper>
