<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.UserTicketOrderDAO">

    <insert id="save" parameterType="userTicketOrderDO">
        insert into t_ticket_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ticketOrderTicketItemId != null">
				ticket_item_id,
			</if>
			<if test="ticketOrderUserId != null">
				user_id,
			</if>
			<if test="ticketOrderOrderTime != null">
				order_time,
			</if>
			<if test="ticketOrderUnitPrice != null">
				unit_price,
			</if>
			<if test="ticketOrderTotalSeat != null">
				total_seat,
			</if>
			<if test="ticketOrderTotalPrice != null">
				total_price,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ticketOrderTicketItemId != null">
				#{ticketOrderTicketItemId},
			</if>
			<if test="ticketOrderUserId != null">
				#{ticketOrderUserId},
			</if>
			<if test="ticketOrderOrderTime != null">
				#{ticketOrderOrderTime},
			</if>
			<if test="ticketOrderUnitPrice != null">
				#{ticketOrderUnitPrice},
			</if>
			<if test="ticketOrderTotalSeat != null">
				#{ticketOrderTotalSeat},
			</if>
			<if test="ticketOrderTotalPrice != null">
				#{ticketOrderTotalPrice},
			</if>
			
        </trim>
    </insert>

    <delete id="remove" parameterType="userTicketOrderDO">
        delete from t_ticket_order where id = #{ticketOrderId}
    </delete>

    <delete id="removeById" parameterType="long">
        delete from t_ticket_order where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_ticket_order where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="userTicketOrderDO">
        update t_ticket_order
        <set>
            <if test="ticketOrderTicketItemId != null">
				ticket_item_id = #{ticketOrderTicketItemId},
			</if>
			<if test="ticketOrderUserId != null">
				user_id = #{ticketOrderUserId},
			</if>
			<if test="ticketOrderOrderTime != null">
				order_time = #{ticketOrderOrderTime},
			</if>
			<if test="ticketOrderUnitPrice != null">
				unit_price = #{ticketOrderUnitPrice},
			</if>
			<if test="ticketOrderTotalSeat != null">
				total_seat = #{ticketOrderTotalSeat},
			</if>
			<if test="ticketOrderTotalPrice != null">
				total_price = #{ticketOrderTotalPrice},
			</if>
			
        </set>
        where id = #{ticketOrderId}
    </update>

    <update id="updateActiveStatus" parameterType="top.zywork.query.StatusQuery">
        update t_ticket_order set is_active = #{status} where id = #{id}
    </update>

    <update id="updateActiveStatuses" parameterType="top.zywork.query.StatusQueries">
        update t_ticket_order set is_active = #{status} where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <sql id="select_columns">
        t_user.id as userId, t_user.headicon as userHeadicon, t_user.nickname as userNickname, t_ticket_order.ticket_item_id as ticketOrderTicketItemId, t_ticket_order.user_id as ticketOrderUserId, t_ticket_order.order_time as ticketOrderOrderTime, t_ticket_order.unit_price as ticketOrderUnitPrice, t_ticket_order.total_seat as ticketOrderTotalSeat, t_ticket_order.total_price as ticketOrderTotalPrice, t_ticket_item.id as ticketItemId, t_ticket_item.title as ticketItemTitle, t_ticket_item.head_img as ticketItemHeadImg, t_ticket_item.play_time as ticketItemPlayTime, t_ticket_item.address as ticketItemAddress
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.userId != null">
			t_user.id = #{query.userId}
		</if>
		<if test="query != null and query.userHeadicon != null and query.userHeadicon != ''">
			and t_user.headicon like concat('%', #{query.userHeadicon}, '%')
		</if>
		<if test="query != null and query.userNickname != null and query.userNickname != ''">
			and t_user.nickname like concat('%', #{query.userNickname}, '%')
		</if>
		<if test="query != null and query.ticketOrderTicketItemId != null">
			and t_ticket_order.ticket_item_id = #{query.ticketOrderTicketItemId}
		</if>
		<if test="query != null and query.ticketOrderUserId != null">
			and t_ticket_order.user_id = #{query.ticketOrderUserId}
		</if>
		<if test="query != null and query.ticketOrderOrderTimeStart != null and query.ticketOrderOrderTimeEnd == null">
			and t_ticket_order.order_time <![CDATA[ >= ]]> #{query.ticketOrderOrderTimeStart}
		</if>
		<if test="query != null and query.ticketOrderOrderTimeStart == null and query.ticketOrderOrderTimeEnd != null">
			and t_ticket_order.order_time <![CDATA[ <= ]]> #{query.ticketOrderOrderTimeEnd}
		</if>
		<if test="query != null and query.ticketOrderOrderTimeStart != null and query.ticketOrderOrderTimeEnd != null">
			and t_ticket_order.order_time <![CDATA[ >= ]]> #{query.ticketOrderOrderTimeStart} and t_ticket_order.order_time <![CDATA[ <= ]]> #{query.ticketOrderOrderTimeEnd}
		</if>
		<if test="query != null and query.ticketOrderUnitPrice != null">
			and t_ticket_order.unit_price = #{query.ticketOrderUnitPrice}
		</if>
		<if test="query != null and query.ticketOrderTotalSeat != null">
			and t_ticket_order.total_seat = #{query.ticketOrderTotalSeat}
		</if>
		<if test="query != null and query.ticketOrderTotalPrice != null">
			and t_ticket_order.total_price = #{query.ticketOrderTotalPrice}
		</if>
		<if test="query != null and query.ticketItemId != null">
			and t_ticket_item.id = #{query.ticketItemId}
		</if>
		<if test="query != null and query.ticketItemTitle != null and query.ticketItemTitle != ''">
			and t_ticket_item.title like concat('%', #{query.ticketItemTitle}, '%')
		</if>
		<if test="query != null and query.ticketItemHeadImg != null and query.ticketItemHeadImg != ''">
			and t_ticket_item.head_img like concat('%', #{query.ticketItemHeadImg}, '%')
		</if>
		<if test="query != null and query.ticketItemPlayTimeStart != null and query.ticketItemPlayTimeEnd == null">
			and t_ticket_item.play_time <![CDATA[ >= ]]> #{query.ticketItemPlayTimeStart}
		</if>
		<if test="query != null and query.ticketItemPlayTimeStart == null and query.ticketItemPlayTimeEnd != null">
			and t_ticket_item.play_time <![CDATA[ <= ]]> #{query.ticketItemPlayTimeEnd}
		</if>
		<if test="query != null and query.ticketItemPlayTimeStart != null and query.ticketItemPlayTimeEnd != null">
			and t_ticket_item.play_time <![CDATA[ >= ]]> #{query.ticketItemPlayTimeStart} and t_ticket_item.play_time <![CDATA[ <= ]]> #{query.ticketItemPlayTimeEnd}
		</if>
		<if test="query != null and query.ticketItemAddress != null and query.ticketItemAddress != ''">
			and t_ticket_item.address like concat('%', #{query.ticketItemAddress}, '%')
		</if>
		
        and
        t_user.id = t_ticket_order.user_id and t_ticket_order.ticket_item_id = t_ticket_item.id
    </sql>

    <select id="getById" parameterType="long" resultType="userTicketOrderDO">
        select
        <include refid="select_columns"/>
        from t_user, t_ticket_order, t_ticket_item where t_ticket_order.id = #{id} and
        t_user.id = t_ticket_order.user_id and t_ticket_order.ticket_item_id = t_ticket_item.id
    </select>

    <select id="listAll" resultType="userTicketOrderDO">
        select
        <include refid="select_columns"/>
        from t_user, t_ticket_order, t_ticket_item
        where
        t_user.id = t_ticket_order.user_id and t_ticket_order.ticket_item_id = t_ticket_item.id
        order by t_ticket_order.update_time desc, t_ticket_order.create_time desc
    </select>

    <select id="listPage" parameterType="top.zywork.query.PageQuery" resultType="userTicketOrderDO">
        select
        <include refid="select_columns"/>
        from t_user, t_ticket_order, t_ticket_item
        where
        t_user.id = t_ticket_order.user_id and t_ticket_order.ticket_item_id = t_ticket_item.id
        order by
        <if test="sort != null and sort != ''">
            ${sort} ${order}
        </if>
        <if test="sort == null or sort == ''">
            t_ticket_order.update_time desc, t_ticket_order.create_time desc
        </if>
        limit #{beginIndex}, #{pageSize}
    </select>

    <select id="count" resultType="long">
        select count(*) from t_user, t_ticket_order, t_ticket_item
        where
        t_user.id = t_ticket_order.user_id and t_ticket_order.ticket_item_id = t_ticket_item.id
    </select>

    <select id="listPageByCondition" resultType="userTicketOrderDO">
        select
        <include refid="select_columns"/>
        from t_user, t_ticket_order, t_ticket_item
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="pager.sort != null and pager.sort != ''">
            ${pager.sort} ${pager.order}
        </if>
        <if test="pager.sort == null or pager.sort == ''">
            t_ticket_order.update_time desc, t_ticket_order.create_time desc
        </if>
        limit #{pager.beginIndex}, #{pager.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_user, t_ticket_order, t_ticket_item
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
