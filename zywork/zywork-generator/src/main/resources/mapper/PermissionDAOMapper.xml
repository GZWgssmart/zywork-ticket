<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.PermissionDAO">

    <insert id="save" parameterType="permissionDO">
        insert into t_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
				title,
			</if>
			<if test="permission != null">
				permission,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="moduleId != null">
				module_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="isActive != null">
				is_active,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
				#{title},
			</if>
			<if test="permission != null">
				#{permission},
			</if>
			<if test="description != null">
				#{description},
			</if>
			<if test="moduleId != null">
				#{moduleId},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="isActive != null">
				#{isActive},
			</if>
			
        </trim>
    </insert>

    <delete id="remove" parameterType="permissionDO">
        delete from t_permission where id = #{id}
    </delete>

    <delete id="removeById" parameterType="long">
        delete from t_permission where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_permission where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="permissionDO">
        update t_permission
        <set>
            <if test="title != null">
				title = #{title},
			</if>
			<if test="permission != null">
				permission = #{permission},
			</if>
			<if test="description != null">
				description = #{description},
			</if>
			<if test="moduleId != null">
				module_id = #{moduleId},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="isActive != null">
				is_active = #{isActive},
			</if>
			
        </set>
        where id = #{id}
    </update>

    <update id="updateActiveStatus" parameterType="top.zywork.query.StatusQuery">
        update t_permission set is_active = #{status} where id = #{id}
    </update>

    <update id="updateActiveStatuses" parameterType="top.zywork.query.StatusQueries">
        update t_permission set is_active = #{status} where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <sql id="select_columns">
        id as id, title as title, permission as permission, description as description, module_id as moduleId, create_time as createTime, update_time as updateTime, is_active as isActive
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.id != null">
			id = #{query.id}
		</if>
		<if test="query != null and query.title != null and query.title != ''">
			and title like concat('%', #{query.title}, '%')
		</if>
		<if test="query != null and query.permission != null and query.permission != ''">
			and permission like concat('%', #{query.permission}, '%')
		</if>
		<if test="query != null and query.description != null and query.description != ''">
			and description like concat('%', #{query.description}, '%')
		</if>
		<if test="query != null and query.moduleId != null">
			and module_id = #{query.moduleId}
		</if>
		<if test="query != null and query.createTimeStart != null and query.createTimeEnd == null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeStart}
		</if>
		<if test="query != null and query.createTimeStart == null and query.createTimeEnd != null">
			and create_time <![CDATA[ <= ]]> #{query.createTimeEnd}
		</if>
		<if test="query != null and query.createTimeStart != null and query.createTimeEnd != null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeStart} and create_time <![CDATA[ <= ]]> #{query.createTimeEnd}
		</if>
		<if test="query != null and query.updateTimeStart != null and query.updateTimeEnd == null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeStart}
		</if>
		<if test="query != null and query.updateTimeStart == null and query.updateTimeEnd != null">
			and update_time <![CDATA[ <= ]]> #{query.updateTimeEnd}
		</if>
		<if test="query != null and query.updateTimeStart != null and query.updateTimeEnd != null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeStart} and update_time <![CDATA[ <= ]]> #{query.updateTimeEnd}
		</if>
		<if test="query != null and query.isActive != null">
			and is_active = #{query.isActive}
		</if>
		
    </sql>

    <select id="getById" parameterType="long" resultType="permissionDO">
        select
        <include refid="select_columns"/>
        from t_permission where id = #{id}
    </select>

    <select id="listAll" resultType="permissionDO">
        select
        <include refid="select_columns"/>
        from t_permission
        order by update_time desc, create_time desc
    </select>

    <select id="listPage" parameterType="top.zywork.query.PageQuery" resultType="permissionDO">
        select
        <include refid="select_columns"/>
        from t_permission
        order by
        <if test="sort != null and sort != ''">
            ${sort} ${order}
        </if>
        <if test="sort == null or sort == ''">
            update_time desc, create_time desc
        </if>
        limit #{beginIndex}, #{pageSize}
    </select>

    <select id="count" resultType="long">
        select count(*) from t_permission
    </select>

    <select id="listPageByCondition" resultType="permissionDO">
        select
        <include refid="select_columns"/>
        from t_permission
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="pager.sort != null and pager.sort != ''">
            ${pager.sort} ${pager.order}
        </if>
        <if test="pager.sort == null or pager.sort == ''">
            update_time desc, create_time desc
        </if>
        limit #{pager.beginIndex}, #{pager.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_permission
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

	<select id="listByRoleIds" resultType="permissionDO">
		select distinct p.* from t_permission p
		join t_role_permission rp on p.id = rp.permission_id
		and rp.role_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="listByAccount" resultType="permissionDO">
		select distinct p.* from t_permission p
		join t_role_permission rp on p.id = rp.permission_id
		join t_user_role ur on rp.role_id = ur.role_id
		join t_user u on u.id = ur.user_id and
		(u.email = #{account} or u.phone = #{account} or u.account_name = #{account})
	</select>

</mapper>
